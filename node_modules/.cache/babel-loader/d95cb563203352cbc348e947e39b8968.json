{"ast":null,"code":"import { createStore, applyMiddleware } from \"redux\";\nimport { composeWithDevTools } from 'redux-devtools-extension';\nimport createSagaMiddleware from \"redux-saga\";\nimport middleware from \"./middleware\";\nimport todoreducer from \"./todoreducers\";\neditre;\nconst sagaMiddleware = createSagaMiddleware();\nexport const store = createStore(todoreducer, composeWithDevTools(applyMiddleware(sagaMiddleware)));\nstore.subscribe(() => {\n  console.log(\"store\", store.getState());\n});\nsagaMiddleware.run(middleware);","map":{"version":3,"names":["createStore","applyMiddleware","composeWithDevTools","createSagaMiddleware","middleware","todoreducer","editre","sagaMiddleware","store","subscribe","console","log","getState","run"],"sources":["D:/React_practice/product_list/products-listing-app/src/redux/store.js"],"sourcesContent":["import { createStore, applyMiddleware } from \"redux\";\r\nimport { composeWithDevTools } from 'redux-devtools-extension';\r\nimport createSagaMiddleware from \"redux-saga\";\r\nimport \"regenerator-runtime/runtime\";\r\n\r\nimport middleware from \"./middleware\";\r\nimport todoreducer from \"./todoreducers\";\r\neditre\r\n\r\nconst sagaMiddleware = createSagaMiddleware();\r\n\r\nexport const store = createStore(\r\n  todoreducer,\r\n  composeWithDevTools(applyMiddleware(sagaMiddleware))\r\n);\r\n\r\nstore.subscribe(() => {\r\n  console.log(\"store\", store.getState());\r\n});\r\n\r\nsagaMiddleware.run(middleware);\r\n\r\n"],"mappings":"AAAA,SAASA,WAAT,EAAsBC,eAAtB,QAA6C,OAA7C;AACA,SAASC,mBAAT,QAAoC,0BAApC;AACA,OAAOC,oBAAP,MAAiC,YAAjC;AAGA,OAAOC,UAAP,MAAuB,cAAvB;AACA,OAAOC,WAAP,MAAwB,gBAAxB;AACAC,MAAM;AAEN,MAAMC,cAAc,GAAGJ,oBAAoB,EAA3C;AAEA,OAAO,MAAMK,KAAK,GAAGR,WAAW,CAC9BK,WAD8B,EAE9BH,mBAAmB,CAACD,eAAe,CAACM,cAAD,CAAhB,CAFW,CAAzB;AAKPC,KAAK,CAACC,SAAN,CAAgB,MAAM;EACpBC,OAAO,CAACC,GAAR,CAAY,OAAZ,EAAqBH,KAAK,CAACI,QAAN,EAArB;AACD,CAFD;AAIAL,cAAc,CAACM,GAAf,CAAmBT,UAAnB"},"metadata":{},"sourceType":"module"}