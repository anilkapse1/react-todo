{"ast":null,"code":"import _extends from \"@babel/runtime/helpers/esm/extends\";\nimport _objectWithoutPropertiesLoose from \"@babel/runtime/helpers/esm/objectWithoutPropertiesLoose\";\nvar _excluded = [\"badgeContent\", \"component\", \"children\", \"invisible\", \"max\", \"slotProps\", \"slots\", \"showZero\"];\nimport * as React from 'react';\nimport PropTypes from 'prop-types';\nimport composeClasses from '../composeClasses';\nimport useBadge from './useBadge';\nimport { getBadgeUnstyledUtilityClass } from './badgeUnstyledClasses';\nimport { useSlotProps } from '../utils';\nimport { jsx as _jsx } from \"react/jsx-runtime\";\nimport { jsxs as _jsxs } from \"react/jsx-runtime\";\n\nvar useUtilityClasses = function useUtilityClasses(ownerState) {\n  var invisible = ownerState.invisible;\n  var slots = {\n    root: ['root'],\n    badge: ['badge', invisible && 'invisible']\n  };\n  return composeClasses(slots, getBadgeUnstyledUtilityClass, undefined);\n};\n/**\r\n *\r\n * Demos:\r\n *\r\n * - [Unstyled badge](https://mui.com/base/react-badge/)\r\n *\r\n * API:\r\n *\r\n * - [BadgeUnstyled API](https://mui.com/base/api/badge-unstyled/)\r\n */\n\n\nvar BadgeUnstyled = /*#__PURE__*/React.forwardRef(function BadgeUnstyled(props, ref) {\n  var component = props.component,\n      children = props.children,\n      _props$max = props.max,\n      maxProp = _props$max === void 0 ? 99 : _props$max,\n      _props$slotProps = props.slotProps,\n      slotProps = _props$slotProps === void 0 ? {} : _props$slotProps,\n      _props$slots = props.slots,\n      slots = _props$slots === void 0 ? {} : _props$slots,\n      _props$showZero = props.showZero,\n      showZero = _props$showZero === void 0 ? false : _props$showZero,\n      other = _objectWithoutPropertiesLoose(props, _excluded);\n\n  var _useBadge = useBadge(_extends({}, props, {\n    max: maxProp\n  })),\n      badgeContent = _useBadge.badgeContent,\n      max = _useBadge.max,\n      displayValue = _useBadge.displayValue,\n      invisible = _useBadge.invisible;\n\n  var ownerState = _extends({}, props, {\n    badgeContent: badgeContent,\n    invisible: invisible,\n    max: max,\n    showZero: showZero\n  });\n\n  var classes = useUtilityClasses(ownerState);\n  var Root = component || slots.root || 'span';\n  var rootProps = useSlotProps({\n    elementType: Root,\n    externalSlotProps: slotProps.root,\n    externalForwardedProps: other,\n    additionalProps: {\n      ref: ref\n    },\n    ownerState: ownerState,\n    className: classes.root\n  });\n  var Badge = slots.badge || 'span';\n  var badgeProps = useSlotProps({\n    elementType: Badge,\n    externalSlotProps: slotProps.badge,\n    ownerState: ownerState,\n    className: classes.badge\n  });\n  return /*#__PURE__*/_jsxs(Root, _extends({}, rootProps, {\n    children: [children, /*#__PURE__*/_jsx(Badge, _extends({}, badgeProps, {\n      children: displayValue\n    }))]\n  }));\n});\nprocess.env.NODE_ENV !== \"production\" ? BadgeUnstyled.propTypes\n/* remove-proptypes */\n= {\n  // ----------------------------- Warning --------------------------------\n  // | These PropTypes are generated from the TypeScript type definitions |\n  // |     To update them edit TypeScript types and run \"yarn proptypes\"  |\n  // ----------------------------------------------------------------------\n\n  /**\r\n   * The content rendered within the badge.\r\n   */\n  badgeContent: PropTypes.node,\n\n  /**\r\n   * The badge will be added relative to this node.\r\n   */\n  children: PropTypes.node,\n\n  /**\r\n   * The component used for the root node.\r\n   * Either a string to use a HTML element or a component.\r\n   */\n  component: PropTypes.elementType,\n\n  /**\r\n   * If `true`, the badge is invisible.\r\n   * @default false\r\n   */\n  invisible: PropTypes.bool,\n\n  /**\r\n   * Max count to show.\r\n   * @default 99\r\n   */\n  max: PropTypes.number,\n\n  /**\r\n   * Controls whether the badge is hidden when `badgeContent` is zero.\r\n   * @default false\r\n   */\n  showZero: PropTypes.bool,\n\n  /**\r\n   * The props used for each slot inside the Badge.\r\n   * @default {}\r\n   */\n  slotProps: PropTypes.shape({\n    badge: PropTypes.oneOfType([PropTypes.func, PropTypes.object]),\n    root: PropTypes.oneOfType([PropTypes.func, PropTypes.object])\n  }),\n\n  /**\r\n   * The components used for each slot inside the Badge.\r\n   * Either a string to use a HTML element or a component.\r\n   * @default {}\r\n   */\n  slots: PropTypes.shape({\n    badge: PropTypes.elementType,\n    root: PropTypes.elementType\n  })\n} : void 0;\nexport default BadgeUnstyled;","map":{"version":3,"names":["_extends","_objectWithoutPropertiesLoose","_excluded","React","PropTypes","composeClasses","useBadge","getBadgeUnstyledUtilityClass","useSlotProps","jsx","_jsx","jsxs","_jsxs","useUtilityClasses","ownerState","invisible","slots","root","badge","undefined","BadgeUnstyled","forwardRef","props","ref","component","children","max","maxProp","slotProps","showZero","other","badgeContent","displayValue","classes","Root","rootProps","elementType","externalSlotProps","externalForwardedProps","additionalProps","className","Badge","badgeProps","process","env","NODE_ENV","propTypes","node","bool","number","shape","oneOfType","func","object"],"sources":["E:/project/react/react-todo/node_modules/@mui/base/BadgeUnstyled/BadgeUnstyled.js"],"sourcesContent":["import _extends from \"@babel/runtime/helpers/esm/extends\";\r\nimport _objectWithoutPropertiesLoose from \"@babel/runtime/helpers/esm/objectWithoutPropertiesLoose\";\r\nconst _excluded = [\"badgeContent\", \"component\", \"children\", \"invisible\", \"max\", \"slotProps\", \"slots\", \"showZero\"];\r\nimport * as React from 'react';\r\nimport PropTypes from 'prop-types';\r\nimport composeClasses from '../composeClasses';\r\nimport useBadge from './useBadge';\r\nimport { getBadgeUnstyledUtilityClass } from './badgeUnstyledClasses';\r\nimport { useSlotProps } from '../utils';\r\nimport { jsx as _jsx } from \"react/jsx-runtime\";\r\nimport { jsxs as _jsxs } from \"react/jsx-runtime\";\r\n\r\nconst useUtilityClasses = ownerState => {\r\n  const {\r\n    invisible\r\n  } = ownerState;\r\n  const slots = {\r\n    root: ['root'],\r\n    badge: ['badge', invisible && 'invisible']\r\n  };\r\n  return composeClasses(slots, getBadgeUnstyledUtilityClass, undefined);\r\n};\r\n/**\r\n *\r\n * Demos:\r\n *\r\n * - [Unstyled badge](https://mui.com/base/react-badge/)\r\n *\r\n * API:\r\n *\r\n * - [BadgeUnstyled API](https://mui.com/base/api/badge-unstyled/)\r\n */\r\n\r\n\r\nconst BadgeUnstyled = /*#__PURE__*/React.forwardRef(function BadgeUnstyled(props, ref) {\r\n  const {\r\n    component,\r\n    children,\r\n    max: maxProp = 99,\r\n    slotProps = {},\r\n    slots = {},\r\n    showZero = false\r\n  } = props,\r\n        other = _objectWithoutPropertiesLoose(props, _excluded);\r\n\r\n  const {\r\n    badgeContent,\r\n    max,\r\n    displayValue,\r\n    invisible\r\n  } = useBadge(_extends({}, props, {\r\n    max: maxProp\r\n  }));\r\n\r\n  const ownerState = _extends({}, props, {\r\n    badgeContent,\r\n    invisible,\r\n    max,\r\n    showZero\r\n  });\r\n\r\n  const classes = useUtilityClasses(ownerState);\r\n  const Root = component || slots.root || 'span';\r\n  const rootProps = useSlotProps({\r\n    elementType: Root,\r\n    externalSlotProps: slotProps.root,\r\n    externalForwardedProps: other,\r\n    additionalProps: {\r\n      ref\r\n    },\r\n    ownerState,\r\n    className: classes.root\r\n  });\r\n  const Badge = slots.badge || 'span';\r\n  const badgeProps = useSlotProps({\r\n    elementType: Badge,\r\n    externalSlotProps: slotProps.badge,\r\n    ownerState,\r\n    className: classes.badge\r\n  });\r\n  return /*#__PURE__*/_jsxs(Root, _extends({}, rootProps, {\r\n    children: [children, /*#__PURE__*/_jsx(Badge, _extends({}, badgeProps, {\r\n      children: displayValue\r\n    }))]\r\n  }));\r\n});\r\nprocess.env.NODE_ENV !== \"production\" ? BadgeUnstyled.propTypes\r\n/* remove-proptypes */\r\n= {\r\n  // ----------------------------- Warning --------------------------------\r\n  // | These PropTypes are generated from the TypeScript type definitions |\r\n  // |     To update them edit TypeScript types and run \"yarn proptypes\"  |\r\n  // ----------------------------------------------------------------------\r\n\r\n  /**\r\n   * The content rendered within the badge.\r\n   */\r\n  badgeContent: PropTypes.node,\r\n\r\n  /**\r\n   * The badge will be added relative to this node.\r\n   */\r\n  children: PropTypes.node,\r\n\r\n  /**\r\n   * The component used for the root node.\r\n   * Either a string to use a HTML element or a component.\r\n   */\r\n  component: PropTypes.elementType,\r\n\r\n  /**\r\n   * If `true`, the badge is invisible.\r\n   * @default false\r\n   */\r\n  invisible: PropTypes.bool,\r\n\r\n  /**\r\n   * Max count to show.\r\n   * @default 99\r\n   */\r\n  max: PropTypes.number,\r\n\r\n  /**\r\n   * Controls whether the badge is hidden when `badgeContent` is zero.\r\n   * @default false\r\n   */\r\n  showZero: PropTypes.bool,\r\n\r\n  /**\r\n   * The props used for each slot inside the Badge.\r\n   * @default {}\r\n   */\r\n  slotProps: PropTypes.shape({\r\n    badge: PropTypes.oneOfType([PropTypes.func, PropTypes.object]),\r\n    root: PropTypes.oneOfType([PropTypes.func, PropTypes.object])\r\n  }),\r\n\r\n  /**\r\n   * The components used for each slot inside the Badge.\r\n   * Either a string to use a HTML element or a component.\r\n   * @default {}\r\n   */\r\n  slots: PropTypes.shape({\r\n    badge: PropTypes.elementType,\r\n    root: PropTypes.elementType\r\n  })\r\n} : void 0;\r\nexport default BadgeUnstyled;"],"mappings":"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"},"metadata":{},"sourceType":"module"}