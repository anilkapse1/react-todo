{"ast":null,"code":"import _slicedToArray from\"E:/project/react/react-todo/node_modules/@babel/runtime/helpers/esm/slicedToArray.js\";import{Box,Button,TextField}from\"@material-ui/core\";import React,{useEffect,useState}from\"react\";import{useDispatch,useSelector}from\"react-redux\";import{addedittodo,addTodo,remvoeeditid}from\"../redux/actions\";import{jsx as _jsx}from\"react/jsx-runtime\";import{jsxs as _jsxs}from\"react/jsx-runtime\";var TodoAdder=function TodoAdder(){var _useState=useState(\"\"),_useState2=_slicedToArray(_useState,2),title=_useState2[0],setTitle=_useState2[1];var handleTextChange=function handleTextChange(e){setTitle(e.target.value);};var dispatch=useDispatch();var editId=useSelector(function(state){return state.editreducer;});var editTodo=useSelector(function(state){return state.todoreducer;});var addtodoItem=function addtodoItem(){if(editId!==\"\"){console.log('if block execute');dispatch(remvoeeditid());console.log(\"id: \".concat(editId,\" and title:\").concat(title,\" \"));dispatch(addedittodo(editId,title));setTitle(\"\");}else{console.log('else block execute');dispatch(addTodo(title));setTitle(\"\");}};useEffect(function(){console.log('--useeffect---');console.log(editId);var editList=editTodo.filter(function(val,idx){return val.id===editId;});editList.forEach(function(val){setTitle(val.title);});},[editId]);return/*#__PURE__*/_jsx(React.Fragment,{children:/*#__PURE__*/_jsxs(Box,{children:[/*#__PURE__*/_jsx(TextField,{style:{width:400},id:\"standard-textarea\",label:\"add todo\",placeholder:\"text...\",multiline:true,variant:\"standard\",value:title,onChange:handleTextChange}),/*#__PURE__*/_jsx(Button,{style:{height:45},variant:\"contained\",onClick:addtodoItem,children:\"add\"})]})});};export default TodoAdder;","map":{"version":3,"names":["Box","Button","TextField","React","useEffect","useState","useDispatch","useSelector","addedittodo","addTodo","remvoeeditid","TodoAdder","title","setTitle","handleTextChange","e","target","value","dispatch","editId","state","editreducer","editTodo","todoreducer","addtodoItem","console","log","editList","filter","val","idx","id","forEach","width","height"],"sources":["E:/project/react/react-todo/src/components/TodoAdder.js"],"sourcesContent":["import { Box, Button, TextField } from \"@material-ui/core\";\r\nimport React, { useEffect, useState } from \"react\";\r\nimport { useDispatch, useSelector } from \"react-redux\";\r\nimport { addedittodo, addTodo, remvoeeditid } from \"../redux/actions\";\r\n\r\n\r\nconst TodoAdder = () => {\r\n  const [title, setTitle] = useState(\"\");\r\n  const handleTextChange = (e) => {\r\n    setTitle(e.target.value);\r\n  };\r\n\r\n  const dispatch = useDispatch();\r\n\r\n  const editId = useSelector((state) => {\r\n    return state.editreducer;\r\n  });\r\n\r\n\r\n  const editTodo = useSelector((state) => {\r\n    return state.todoreducer;\r\n  });\r\n\r\n  const addtodoItem = () => {\r\n    if(editId!==\"\"){\r\n        console.log('if block execute');\r\n        dispatch(remvoeeditid());\r\n        console.log(`id: ${editId} and title:${title} `);\r\n        dispatch(addedittodo(editId,title));\r\n        setTitle(\"\");\r\n\r\n    }else{\r\n        console.log('else block execute');\r\n        dispatch(addTodo(title));\r\n        setTitle(\"\");\r\n    }\r\n  };\r\n\r\n\r\n\r\n  useEffect(()=>{\r\n    console.log('--useeffect---');\r\n    console.log(editId);\r\n    let editList = editTodo.filter((val,idx)=>{\r\n        return val.id===editId;\r\n    })\r\n\r\n    editList.forEach( val=> {\r\n        setTitle(val.title);\r\n    });\r\n\r\n  },[editId])\r\n\r\n\r\n\r\n\r\n\r\n  return (\r\n    <React.Fragment>\r\n      <Box>\r\n        <TextField\r\n          style={{ width: 400 }}\r\n          id=\"standard-textarea\"\r\n          label=\"add todo\"\r\n          placeholder=\"text...\"\r\n          multiline\r\n          variant=\"standard\"\r\n          value={title}\r\n          onChange={handleTextChange}\r\n        />\r\n        <Button\r\n          style={{ height: 45 }}\r\n          variant=\"contained\"\r\n          onClick={addtodoItem}\r\n        >\r\n          add\r\n        </Button>\r\n      </Box>\r\n    </React.Fragment>\r\n  );\r\n};\r\n\r\nexport default TodoAdder;\r\n"],"mappings":"iHAAA,OAASA,GAAT,CAAcC,MAAd,CAAsBC,SAAtB,KAAuC,mBAAvC,CACA,MAAOC,MAAP,EAAgBC,SAAhB,CAA2BC,QAA3B,KAA2C,OAA3C,CACA,OAASC,WAAT,CAAsBC,WAAtB,KAAyC,aAAzC,CACA,OAASC,WAAT,CAAsBC,OAAtB,CAA+BC,YAA/B,KAAmD,kBAAnD,C,wFAGA,GAAMC,UAAS,CAAG,QAAZA,UAAY,EAAM,CACtB,cAA0BN,QAAQ,CAAC,EAAD,CAAlC,wCAAOO,KAAP,eAAcC,QAAd,eACA,GAAMC,iBAAgB,CAAG,QAAnBA,iBAAmB,CAACC,CAAD,CAAO,CAC9BF,QAAQ,CAACE,CAAC,CAACC,MAAF,CAASC,KAAV,CAAR,CACD,CAFD,CAIA,GAAMC,SAAQ,CAAGZ,WAAW,EAA5B,CAEA,GAAMa,OAAM,CAAGZ,WAAW,CAAC,SAACa,KAAD,CAAW,CACpC,MAAOA,MAAK,CAACC,WAAb,CACD,CAFyB,CAA1B,CAKA,GAAMC,SAAQ,CAAGf,WAAW,CAAC,SAACa,KAAD,CAAW,CACtC,MAAOA,MAAK,CAACG,WAAb,CACD,CAF2B,CAA5B,CAIA,GAAMC,YAAW,CAAG,QAAdA,YAAc,EAAM,CACxB,GAAGL,MAAM,GAAG,EAAZ,CAAe,CACXM,OAAO,CAACC,GAAR,CAAY,kBAAZ,EACAR,QAAQ,CAACR,YAAY,EAAb,CAAR,CACAe,OAAO,CAACC,GAAR,eAAmBP,MAAnB,uBAAuCP,KAAvC,OACAM,QAAQ,CAACV,WAAW,CAACW,MAAD,CAAQP,KAAR,CAAZ,CAAR,CACAC,QAAQ,CAAC,EAAD,CAAR,CAEH,CAPD,IAOK,CACDY,OAAO,CAACC,GAAR,CAAY,oBAAZ,EACAR,QAAQ,CAACT,OAAO,CAACG,KAAD,CAAR,CAAR,CACAC,QAAQ,CAAC,EAAD,CAAR,CACH,CACF,CAbD,CAiBAT,SAAS,CAAC,UAAI,CACZqB,OAAO,CAACC,GAAR,CAAY,gBAAZ,EACAD,OAAO,CAACC,GAAR,CAAYP,MAAZ,EACA,GAAIQ,SAAQ,CAAGL,QAAQ,CAACM,MAAT,CAAgB,SAACC,GAAD,CAAKC,GAAL,CAAW,CACtC,MAAOD,IAAG,CAACE,EAAJ,GAASZ,MAAhB,CACH,CAFc,CAAf,CAIAQ,QAAQ,CAACK,OAAT,CAAkB,SAAAH,GAAG,CAAG,CACpBhB,QAAQ,CAACgB,GAAG,CAACjB,KAAL,CAAR,CACH,CAFD,EAID,CAXQ,CAWP,CAACO,MAAD,CAXO,CAAT,CAiBA,mBACE,KAAC,KAAD,CAAO,QAAP,wBACE,MAAC,GAAD,yBACE,KAAC,SAAD,EACE,KAAK,CAAE,CAAEc,KAAK,CAAE,GAAT,CADT,CAEE,EAAE,CAAC,mBAFL,CAGE,KAAK,CAAC,UAHR,CAIE,WAAW,CAAC,SAJd,CAKE,SAAS,KALX,CAME,OAAO,CAAC,UANV,CAOE,KAAK,CAAErB,KAPT,CAQE,QAAQ,CAAEE,gBARZ,EADF,cAWE,KAAC,MAAD,EACE,KAAK,CAAE,CAAEoB,MAAM,CAAE,EAAV,CADT,CAEE,OAAO,CAAC,WAFV,CAGE,OAAO,CAAEV,WAHX,iBAXF,GADF,EADF,CAuBD,CA1ED,CA4EA,cAAeb,UAAf"},"metadata":{},"sourceType":"module"}