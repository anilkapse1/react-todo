[{"D:\\React_practice\\product_list\\products-listing-app\\src\\index.js":"1","D:\\React_practice\\product_list\\products-listing-app\\src\\App.js":"2","D:\\React_practice\\product_list\\products-listing-app\\src\\redux\\store.js":"3","D:\\React_practice\\product_list\\products-listing-app\\src\\redux\\todoreducers.js":"4","D:\\React_practice\\product_list\\products-listing-app\\src\\redux\\editreducer.js":"5","D:\\React_practice\\product_list\\products-listing-app\\src\\redux\\middleware.js":"6","D:\\React_practice\\product_list\\products-listing-app\\src\\components\\TodoAdder.js":"7","D:\\React_practice\\product_list\\products-listing-app\\src\\components\\TodoContainer.js":"8","D:\\React_practice\\product_list\\products-listing-app\\src\\redux\\editText.js":"9","D:\\React_practice\\product_list\\products-listing-app\\src\\redux\\initial-state.js":"10","D:\\React_practice\\product_list\\products-listing-app\\src\\redux\\utils.js":"11","D:\\React_practice\\product_list\\products-listing-app\\src\\redux\\actions.js":"12","D:\\React_practice\\product_list\\products-listing-app\\src\\components\\TodoItem.js":"13"},{"size":315,"mtime":1667536298336,"results":"14","hashOfConfig":"15"},{"size":1430,"mtime":1667906871865,"results":"16","hashOfConfig":"15"},{"size":717,"mtime":1667541215200,"results":"17","hashOfConfig":"15"},{"size":1748,"mtime":1667563095420,"results":"18","hashOfConfig":"15"},{"size":445,"mtime":1667561899040,"results":"19","hashOfConfig":"15"},{"size":262,"mtime":1667575852374,"results":"20","hashOfConfig":"15"},{"size":1822,"mtime":1667562869865,"results":"21","hashOfConfig":"15"},{"size":2157,"mtime":1667904789415,"results":"22","hashOfConfig":"15"},{"size":29,"mtime":1667572416024,"results":"23","hashOfConfig":"15"},{"size":195,"mtime":1667565200003,"results":"24","hashOfConfig":"15"},{"size":321,"mtime":1667562308490,"results":"25","hashOfConfig":"15"},{"size":1068,"mtime":1667562540265,"results":"26","hashOfConfig":"15"},{"size":2105,"mtime":1667575407651,"results":"27","hashOfConfig":"15"},{"filePath":"28","messages":"29","suppressedMessages":"30","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"31"},"8b9zec",{"filePath":"32","messages":"33","suppressedMessages":"34","errorCount":0,"fatalErrorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"35"},{"filePath":"36","messages":"37","suppressedMessages":"38","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"31"},{"filePath":"39","messages":"40","suppressedMessages":"41","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"31"},{"filePath":"42","messages":"43","suppressedMessages":"44","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"31"},{"filePath":"45","messages":"46","suppressedMessages":"47","errorCount":0,"fatalErrorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"48","usedDeprecatedRules":"31"},{"filePath":"49","messages":"50","suppressedMessages":"51","errorCount":0,"fatalErrorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"52","usedDeprecatedRules":"31"},{"filePath":"53","messages":"54","suppressedMessages":"55","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"31"},{"filePath":"56","messages":"57","suppressedMessages":"58","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"31"},{"filePath":"59","messages":"60","suppressedMessages":"61","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"31"},{"filePath":"62","messages":"63","suppressedMessages":"64","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"31"},{"filePath":"65","messages":"66","suppressedMessages":"67","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"31"},{"filePath":"68","messages":"69","suppressedMessages":"70","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"31"},"D:\\React_practice\\product_list\\products-listing-app\\src\\index.js",[],[],[],"D:\\React_practice\\product_list\\products-listing-app\\src\\App.js",["71"],[],"import React from \"react\";\nimport {\n  AppBar,\n  Toolbar,\n  IconButton,\n  Typography,\n  makeStyles,\n  Container,\n  Paper\n} from \"@material-ui/core\";\nimport TodoAdder from \"./components/TodoAdder\";\nimport TodoContainer from \"./components/TodoContainer\";\nimport { useSelector } from \"react-redux\";\nimport Badge from '@mui/material/Badge';\nimport FormatListBulletedIcon from '@mui/icons-material/FormatListBulleted';\n\nconst useStyles = makeStyles((theme) => ({\n  root: {},\n  appContainer: {\n    paddingLeft: 100,\n    paddingRight: 100,\n    marginTop: 100\n  },\n  wrapper: {\n    textAlign: \"center\",\n    width: \"100%\"\n  }\n}));\n\nconst App = () => {\n  const classes = useStyles();\n  const totalList = useSelector((state)=>{\n    return state.todoreducer;\n  })\n\n  return (\n    <React.Fragment>\n      <div>\n        <AppBar>\n          <Toolbar>\n              <Typography variant=\"h4\" style={{ marginLeft: \"20px\",marginRight:'10px' }}>\n                ToDo or a Day:\n              </Typography>\n              <Badge badgeContent={totalList.length} color=\"primary\">\n                <FormatListBulletedIcon/>\n              </Badge>\n          </Toolbar>\n        </AppBar>\n\n        <Container className={classes.appContainer}>\n          <Paper className={classes.wrapper} elevation={0}>\n            <TodoAdder />\n            <TodoContainer />\n          </Paper>\n        </Container>\n      </div>\n    </React.Fragment>\n  );\n};\n\nexport default App;\n","D:\\React_practice\\product_list\\products-listing-app\\src\\redux\\store.js",[],[],"D:\\React_practice\\product_list\\products-listing-app\\src\\redux\\todoreducers.js",[],[],"D:\\React_practice\\product_list\\products-listing-app\\src\\redux\\editreducer.js",[],[],"D:\\React_practice\\product_list\\products-listing-app\\src\\redux\\middleware.js",["72"],[],"\r\nimport { takeEvery } from \"@redux-saga/core/effects\";\r\nimport { ADD_TODO } from \"./utils\";\r\n\r\nexport function* addTodo() {\r\n  yield takeEvery(ADD_TODO, function* () {\r\n    //perform asyn task\r\n  });\r\n}\r\n\r\nexport default function* () {\r\n  yield* addTodo();\r\n}\r\n","D:\\React_practice\\product_list\\products-listing-app\\src\\components\\TodoAdder.js",["73"],[],"import { Box, Button, TextField } from \"@material-ui/core\";\r\nimport React, { useEffect, useState } from \"react\";\r\nimport { useDispatch, useSelector } from \"react-redux\";\r\nimport { addedittodo, addTodo, remvoeeditid } from \"../redux/actions\";\r\n\r\n\r\nconst TodoAdder = () => {\r\n  const [title, setTitle] = useState(\"\");\r\n  const handleTextChange = (e) => {\r\n    setTitle(e.target.value);\r\n  };\r\n\r\n  const dispatch = useDispatch();\r\n\r\n  const editId = useSelector((state) => {\r\n    return state.editreducer;\r\n  });\r\n\r\n\r\n  const editTodo = useSelector((state) => {\r\n    return state.todoreducer;\r\n  });\r\n\r\n  const addtodoItem = () => {\r\n    if(editId!==\"\"){\r\n        console.log('if block execute');\r\n        dispatch(remvoeeditid());\r\n        console.log(`id: ${editId} and title:${title} `);\r\n        dispatch(addedittodo(editId,title));\r\n        setTitle(\"\");\r\n\r\n    }else{\r\n        console.log('else block execute');\r\n        dispatch(addTodo(title));\r\n        setTitle(\"\");\r\n    }\r\n  };\r\n\r\n\r\n\r\n  useEffect(()=>{\r\n    console.log('--useeffect---');\r\n    console.log(editId);\r\n    let editList = editTodo.filter((val,idx)=>{\r\n        return val.id===editId;\r\n    })\r\n\r\n    editList.forEach( val=> {\r\n        setTitle(val.title);\r\n    });\r\n\r\n  },[editId])\r\n\r\n\r\n\r\n\r\n\r\n  return (\r\n    <React.Fragment>\r\n      <Box>\r\n        <TextField\r\n          style={{ width: 400 }}\r\n          id=\"standard-textarea\"\r\n          label=\"add todo\"\r\n          placeholder=\"text...\"\r\n          multiline\r\n          variant=\"standard\"\r\n          value={title}\r\n          onChange={handleTextChange}\r\n        />\r\n        <Button\r\n          style={{ height: 45 }}\r\n          variant=\"contained\"\r\n          onClick={addtodoItem}\r\n        >\r\n          add\r\n        </Button>\r\n      </Box>\r\n    </React.Fragment>\r\n  );\r\n};\r\n\r\nexport default TodoAdder;\r\n","D:\\React_practice\\product_list\\products-listing-app\\src\\components\\TodoContainer.js",[],[],"D:\\React_practice\\product_list\\products-listing-app\\src\\redux\\editText.js",[],[],"D:\\React_practice\\product_list\\products-listing-app\\src\\redux\\initial-state.js",[],[],"D:\\React_practice\\product_list\\products-listing-app\\src\\redux\\utils.js",[],[],"D:\\React_practice\\product_list\\products-listing-app\\src\\redux\\actions.js",[],[],"D:\\React_practice\\product_list\\products-listing-app\\src\\components\\TodoItem.js",[],[],{"ruleId":"74","severity":1,"message":"75","line":5,"column":3,"nodeType":"76","messageId":"77","endLine":5,"endColumn":13},{"ruleId":"78","severity":1,"message":"79","line":11,"column":1,"nodeType":"80","endLine":13,"endColumn":2},{"ruleId":"81","severity":1,"message":"82","line":52,"column":5,"nodeType":"83","endLine":52,"endColumn":13,"suggestions":"84"},"no-unused-vars","'IconButton' is defined but never used.","Identifier","unusedVar","import/no-anonymous-default-export","Unexpected default export of anonymous function","ExportDefaultDeclaration","react-hooks/exhaustive-deps","React Hook useEffect has a missing dependency: 'editTodo'. Either include it or remove the dependency array.","ArrayExpression",["85"],{"desc":"86","fix":"87"},"Update the dependencies array to be: [editId, editTodo]",{"range":"88","text":"89"},[1242,1250],"[editId, editTodo]"]